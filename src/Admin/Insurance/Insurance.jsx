import React from 'react'

// Mock Data for demonstration
// ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô
const mockData = {
  patient: {
    name: "‡∏ô‡∏≤‡∏¢‡∏™‡∏°‡∏ä‡∏≤‡∏¢ ‡πÉ‡∏à‡∏î‡∏µ",
    hn: "HN123456",
    id: "145xxxxxx",
    status: "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏£‡∏±‡∏Å‡∏©‡∏≤",
  },
  stay: {
    admissionDate: "2025-09-20",
    roomType: "‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏î‡∏µ‡πà‡∏¢‡∏ß‡∏û‡∏¥‡πÄ‡∏®‡∏© (VIP)",
    dailyRoomRate: 4500, // THB
    lengthOfStayDays: 7, // ‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏ô‡∏≠‡∏ô (‡∏à‡∏≥‡∏•‡∏≠‡∏á)
  },
  costs: {
    currentIncurred: 85000, // ‡∏Ñ‡πà‡∏≤‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô‡πÅ‡∏•‡πâ‡∏ß
    futureEstimated: 35000, // ‡∏Ñ‡πà‡∏≤‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•‡∏ó‡∏µ‡πà‡∏Ñ‡∏≤‡∏î‡∏ß‡πà‡∏≤‡∏à‡∏∞‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï
    insurancePaymentToDate: 55000, // ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏à‡πà‡∏≤‡∏¢‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß
  },
  policy: {
    provider: "‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó ‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏†‡∏±‡∏¢‡∏£‡πà‡∏°‡πÄ‡∏¢‡πá‡∏ô ‡∏à‡∏≥‡∏Å‡∏±‡∏î",
    policyNumber: "A890-B123-C456",
    coverageType: "IPD/OPD Platinum",
    annualLimit: 150000, // ‡∏ß‡∏á‡πÄ‡∏á‡∏¥‡∏ô‡∏ï‡πà‡∏≠‡∏õ‡∏µ
    roomLimitDaily: 4000, // ‡∏ß‡∏á‡πÄ‡∏á‡∏¥‡∏ô‡∏Ñ‡πà‡∏≤‡∏´‡πâ‡∏≠‡∏á‡∏ï‡πà‡∏≠‡∏ß‡∏±‡∏ô
    outpatientLimit: 10000,
    deductible: 5000, // ‡∏Ñ‡πà‡∏≤‡πÄ‡∏™‡∏µ‡∏¢‡∏´‡∏≤‡∏¢‡∏™‡πà‡∏ß‡∏ô‡πÅ‡∏£‡∏Å (‡∏ó‡∏µ‡πà‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢‡∏ï‡πâ‡∏≠‡∏á‡∏à‡πà‡∏≤‡∏¢‡∏Å‡πà‡∏≠‡∏ô)
  }
};

// Utility function to format currency (THB)
const formatCurrency = (amount) => {
  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏Å‡∏∏‡∏•‡πÄ‡∏á‡∏¥‡∏ô‡∏ö‡∏≤‡∏ó
  return new Intl.NumberFormat('th-TH', { style: 'currency', currency: 'THB', minimumFractionDigits: 0 }).format(amount);
};

// Utility function to calculate remaining estimated payment
const calculateRemaining = (data) => {
    const totalEstimatedCost = data.costs.currentIncurred + data.costs.futureEstimated;
    
    // ‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÅ‡∏ö‡∏ö‡∏á‡πà‡∏≤‡∏¢: ‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÇ‡∏î‡∏¢‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì - ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏à‡πà‡∏≤‡∏¢‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß
    // ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏à‡∏£‡∏¥‡∏á ‡∏à‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ logic ‡∏ó‡∏µ‡πà‡∏ã‡∏±‡∏ö‡∏ã‡πâ‡∏≠‡∏ô‡∏ï‡∏≤‡∏°‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏ß‡∏á‡πÄ‡∏á‡∏¥‡∏ô‡∏Ñ‡πà‡∏≤‡∏´‡πâ‡∏≠‡∏á, ‡∏ß‡∏á‡πÄ‡∏á‡∏¥‡∏ô‡∏£‡∏ß‡∏°, ‡πÅ‡∏•‡∏∞ deductible
    const remainingToPay = totalEstimatedCost - data.costs.insurancePaymentToDate; 

    // ‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏à‡πà‡∏≤‡∏¢‡∏ï‡∏¥‡∏î‡∏•‡∏ö
    return remainingToPay > 0 ? remainingToPay : 0;
};


export default function Insurance() {
  const { patient, stay, costs, policy } = mockData;
  const totalEstimatedCost = costs.currentIncurred + costs.futureEstimated;
  const remainingEstimatedPayment = calculateRemaining(mockData);
  const totalInsuranceCoverageUsed = costs.insurancePaymentToDate;

  return (
    <div className="p-4 sm:p-6 lg:p-8 bg-gray-50 min-h-screen font-sans">
      <h1 className="text-3xl font-extrabold text-[#2155CD] mb-6 border-b pb-3">
        ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡πÅ‡∏•‡∏∞‡∏Ñ‡πà‡∏≤‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏• (Insurance & Billing)
      </h1>

      {/* Patient and Stay Summary Card */}
      <div className="bg-white p-6 rounded-xl shadow-lg mb-6 border-l-4 border-[#2155CD]">
        <h2 className="text-xl font-semibold text-gray-800 mb-4">‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏±‡∏Å‡∏©‡∏≤</h2>
        <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-4 gap-4 text-sm">
          <InfoCard title="‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢" value={patient.name} icon="üë§" />
          <InfoCard title="HN" value={patient.hn} icon="üÜî" />
          <InfoCard title="‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏±‡∏Å‡∏©‡∏≤" value={stay.admissionDate} icon="üìÖ" />
          <InfoCard title="‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞" value={patient.status} icon="üè•" colorClass="text-green-600 font-bold" />
        </div>
      </div>

      {/* Cost Overview and Comparison Grid (Responsive Layout) */}
      <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
        
        {/* === COLUMN 1: COST SUMMARY & STAY DETAILS (2/3 width on large screens) === */}
        <div className="lg:col-span-2 space-y-6">
            
          {/* Current and Future Costs */}
          <div className="bg-white p-6 rounded-xl shadow-lg">
            <h2 className="text-xl font-semibold text-gray-800 mb-4">‡∏Ñ‡πà‡∏≤‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏• (Treatment Costs)</h2>
            <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
              <CostCard 
                title="‡∏Ñ‡πà‡∏≤‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô (‡∏™‡∏∞‡∏™‡∏°)" 
                amount={costs.currentIncurred} 
                description="Total costs incurred to date." 
                color="bg-red-50 text-red-700"
              />
              <CostCard 
                title="‡∏Ñ‡πà‡∏≤‡∏£‡∏±‡∏Å‡∏©‡∏≤‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï (‡πÇ‡∏î‡∏¢‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì)" 
                amount={costs.futureEstimated} 
                description="Estimated costs based on doctor's plan." 
                color="bg-yellow-50 text-yellow-700"
              />
              <CostCard 
                title="‡∏£‡∏ß‡∏°‡∏Ñ‡πà‡∏≤‡∏£‡∏±‡∏Å‡∏©‡∏≤‡πÇ‡∏î‡∏¢‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì" 
                amount={totalEstimatedCost} 
                description="Current + Future Estimate." 
                color="bg-indigo-50 text-indigo-700"
              />
            </div>
          </div>

          {/* Stay Details */}
          <div className="bg-white p-6 rounded-xl shadow-lg">
            <h2 className="text-xl font-semibold text-gray-800 mb-4">‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏û‡∏±‡∏Å</h2>
            <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                <InfoCard 
                    title="‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏±‡∏Å‡∏©‡∏≤" 
                    value={stay.admissionDate} 
                    icon="üóìÔ∏è" 
                />
                <InfoCard 
                    title="‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏ô‡∏≠‡∏ô" 
                    value={`${stay.lengthOfStayDays} ‡∏ß‡∏±‡∏ô`} 
                    icon="‚è≥" 
                />
                <InfoCard 
                    title="‡∏Ñ‡πà‡∏≤‡∏´‡πâ‡∏≠‡∏á‡∏û‡∏±‡∏Å/‡∏ß‡∏±‡∏ô" 
                    value={formatCurrency(stay.dailyRoomRate)} 
                    icon="üõå" 
                    description={stay.roomType}
                />
            </div>
          </div>

        </div>

        {/* === COLUMN 2: POLICY COMPARISON & BALANCE (1/3 width on large screens) === */}
        <div className="lg:col-span-1 space-y-6">
          
          {/* Policy Information (‡∏Å‡∏£‡∏°‡∏ò‡∏£‡∏£‡∏°‡πå) */}
          <div className="bg-white p-6 rounded-xl shadow-lg border border-[#2155CD]/20">
            <h2 className="text-xl font-semibold text-[#2155CD] mb-4">‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏£‡∏°‡∏ò‡∏£‡∏£‡∏°‡πå</h2>
            <PolicyDetail label="‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô" value={policy.provider} />
            <PolicyDetail label="‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏Å‡∏£‡∏°‡∏ò‡∏£‡∏£‡∏°‡πå" value={policy.policyNumber} />
            <PolicyDetail label="‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏∏‡πâ‡∏°‡∏Ñ‡∏£‡∏≠‡∏á" value={policy.coverageType} />
            <PolicyDetail label="‡∏ß‡∏á‡πÄ‡∏á‡∏¥‡∏ô‡∏ï‡πà‡∏≠‡∏õ‡∏µ (Annual Limit)" value={formatCurrency(policy.annualLimit)} isCurrency />
            <PolicyDetail label="‡∏ß‡∏á‡πÄ‡∏á‡∏¥‡∏ô‡∏Ñ‡πà‡∏≤‡∏´‡πâ‡∏≠‡∏á/‡∏ß‡∏±‡∏ô" value={formatCurrency(policy.roomLimitDaily)} isCurrency />
            <PolicyDetail label="‡∏Ñ‡πà‡∏≤‡πÄ‡∏™‡∏µ‡∏¢‡∏´‡∏≤‡∏¢‡∏™‡πà‡∏ß‡∏ô‡πÅ‡∏£‡∏Å (Deductible)" value={formatCurrency(policy.deductible)} isCurrency />
          </div>

          {/* Balance/Payment Status (‡∏¢‡∏≠‡∏î‡∏ä‡∏≥‡∏£‡∏∞) */}
          <div className={`p-6 rounded-xl shadow-2xl transition-all duration-300 
            ${remainingEstimatedPayment > 0 ? 'bg-red-600 text-white' : 'bg-green-600 text-white'}`}
          >
            <h3 className="text-2xl font-bold mb-2">‡∏™‡∏£‡∏∏‡∏õ‡∏¢‡∏≠‡∏î‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ä‡∏≥‡∏£‡∏∞ (‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì)</h3>
            <div className="text-5xl font-extrabold mb-4">
              {formatCurrency(remainingEstimatedPayment)}
            </div>
            <p className="text-sm font-light">
              *‡∏¢‡∏≠‡∏î‡∏ô‡∏µ‡πâ‡∏Ñ‡∏∑‡∏≠‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÇ‡∏î‡∏¢‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì‡∏ó‡∏µ‡πà‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏ú‡∏¥‡∏î‡∏ä‡∏≠‡∏ö 
              (‡∏≠‡∏≤‡∏à‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏ï‡∏≤‡∏°‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏Å‡∏£‡∏°‡∏ò‡∏£‡∏£‡∏°‡πå‡∏à‡∏£‡∏¥‡∏á)
            </p>
            <div className='mt-4 pt-4 border-t border-white/50'>
                <p className="text-lg font-semibold">
                    ‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏à‡πà‡∏≤‡∏¢‡πÅ‡∏•‡πâ‡∏ß: {formatCurrency(totalInsuranceCoverageUsed)}
                </p>
            </div>
          </div>

        </div>

      </div>
    </div>
  );
}

// Reusable Components
const InfoCard = ({ title, value, icon, description, colorClass = 'text-gray-900' }) => (
    <div className="bg-gray-100 p-4 rounded-lg flex items-center gap-3">
        <span className="text-2xl">{icon}</span>
        <div>
            <p className="text-xs text-gray-500">{title}</p>
            <p className={`text-md font-medium ${colorClass}`}>{value}</p>
            {description && <p className="text-xs text-gray-400 mt-1">{description}</p>}
        </div>
    </div>
);

const CostCard = ({ title, amount, description, color }) => {
    // ‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô formatCurrency ‡∏à‡∏≤‡∏Å‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô
    const formatCurrency = (amount) => {
        return new Intl.NumberFormat('th-TH', { style: 'currency', currency: 'THB', minimumFractionDigits: 0 }).format(amount);
    };

    return (
        <div className={`${color} p-5 rounded-xl border border-current transition transform hover:scale-[1.02] cursor-default`}>
            <p className="text-sm font-medium mb-1">{title}</p>
            <p className="text-3xl font-extrabold">{formatCurrency(amount)}</p>
            <p className="text-xs mt-2 opacity-80">{description}</p>
        </div>
    );
}

const PolicyDetail = ({ label, value, isCurrency = false }) => {
    // ‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô formatCurrency ‡∏à‡∏≤‡∏Å‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô
    const formatCurrency = (amount) => {
        return new Intl.NumberFormat('th-TH', { style: 'currency', currency: 'THB', minimumFractionDigits: 0 }).format(amount);
    };

    return (
        <div className="flex justify-between py-2 border-b last:border-b-0 text-sm">
            <span className="text-gray-600">{label}</span>
            <span className={`font-semibold ${isCurrency ? 'text-green-700' : 'text-gray-900'}`}>
                {isCurrency ? formatCurrency(value) : value}
            </span>
        </div>
    );
};
