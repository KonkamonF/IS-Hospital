import React, { useState } from "react";
// ‡∏™‡∏°‡∏°‡∏ï‡∏¥‡∏ß‡πà‡∏≤‡πÑ‡∏ü‡∏•‡πå‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏ñ‡∏π‡∏Å‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤‡∏ï‡∏≤‡∏°‡πÄ‡∏î‡∏¥‡∏°
import i3 from "../../assets/3.png";
import i4 from "../../assets/4.png";
import i5 from "../../assets/5.png";
import i6 from "../../assets/6.png";
import i7 from "../../assets/7.png";

// Mock imports for demonstration
// const mockImage = "https://via.placeholder.com/150/007bff/ffffff?text=Patient";

export default function BodyNurse() {
  // Mock data (‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å API)
  const initialPatients = [
    {
      id: 1,
      name: "Somchai Prasert",
      hn: "HN001",
      age: 45,
      gender: "‡∏ä‡∏≤‡∏¢",
      contact: "081-xxx-1234",
      diagnosis: "Appendicitis (‡πÑ‡∏™‡πâ‡∏ï‡∏¥‡πà‡∏á‡∏≠‡∏±‡∏Å‡πÄ‡∏™‡∏ö)",
      doctorDecision: "Admit",
      status: "‡∏£‡∏≠ Admit", // ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
      room: "Ward A - ‡∏´‡πâ‡∏≠‡∏á 302",
      treatmentPlan: "‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏ú‡πà‡∏≤‡∏ï‡∏±‡∏î‡πÑ‡∏™‡πâ‡∏ï‡∏¥‡πà‡∏á‡∏û‡∏£‡∏∏‡πà‡∏á‡∏ô‡∏µ‡πâ‡πÄ‡∏ä‡πâ‡∏≤, ‡∏á‡∏î‡∏ô‡πâ‡∏≥‡πÅ‡∏•‡∏∞‡∏≠‡∏≤‡∏´‡∏≤‡∏£",
      vitals: { temp: 37.5, bp: "120/80", hr: 75, oxygen: 98 },
      i: i3,
    },
    {
      id: 2,
      name: "Warinya Thongdee",
      hn: "HN002",
      age: 32,
      gender: "‡∏´‡∏ç‡∏¥‡∏á",
      contact: "092-xxx-5678",
      diagnosis: "Gastroenteritis (‡∏•‡∏≥‡πÑ‡∏™‡πâ‡∏≠‡∏±‡∏Å‡πÄ‡∏™‡∏ö)",
      doctorDecision: "OPD",
      status: "‡∏£‡∏±‡∏ö‡∏¢‡∏≤‡∏Å‡∏•‡∏±‡∏ö‡∏ö‡πâ‡∏≤‡∏ô",
      room: "OPD Zone B",
      treatmentPlan: "‡πÉ‡∏´‡πâ‡∏¢‡∏≤‡∏•‡∏î‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏Å‡πÄ‡∏™‡∏ö, ‡πÄ‡∏Å‡∏•‡∏∑‡∏≠‡πÅ‡∏£‡πà, ‡∏ô‡∏±‡∏î‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏ú‡∏• 3 ‡∏ß‡∏±‡∏ô",
      vitals: { temp: 36.8, bp: "110/70", hr: 80, oxygen: 99 },
      i: i4,
    },
    {
      id: 3,
      name: "Anan Pholchai",
      hn: "HN003",
      age: 60,
      gender: "‡∏ä‡∏≤‡∏¢",
      contact: "065-xxx-9012",
      diagnosis: "Pneumonia (‡∏õ‡∏≠‡∏î‡∏≠‡∏±‡∏Å‡πÄ‡∏™‡∏ö)",
      doctorDecision: "Admit",
      status: "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏£‡∏±‡∏Å‡∏©‡∏≤‡πÉ‡∏ô‡∏´‡∏≠‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢",
      room: "Ward C - ‡∏´‡πâ‡∏≠‡∏á 210",
      treatmentPlan:
        "‡πÉ‡∏´‡πâ‡∏¢‡∏≤‡∏õ‡∏è‡∏¥‡∏ä‡∏µ‡∏ß‡∏ô‡∏∞‡∏ó‡∏≤‡∏á‡∏´‡∏•‡∏≠‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏î, ‡∏≠‡∏≠‡∏Å‡∏ã‡∏¥‡πÄ‡∏à‡∏ô 2L/min, ‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏ó‡∏∏‡∏Å 4 ‡∏ä‡∏°.",
      vitals: { temp: 38.2, bp: "135/85", hr: 95, oxygen: 94 },
      i: i5,
    },
    {
      id: 4,
      name: "Anan Pholchai",
      hn: "HN003",
      age: 60,
      gender: "‡∏ä‡∏≤‡∏¢",
      contact: "065-xxx-9012",
      diagnosis: "Pneumonia (‡∏õ‡∏≠‡∏î‡∏≠‡∏±‡∏Å‡πÄ‡∏™‡∏ö)",
      doctorDecision: "Admit",
      status: "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏£‡∏±‡∏Å‡∏©‡∏≤‡πÉ‡∏ô‡∏´‡∏≠‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢",
      room: "Ward C - ‡∏´‡πâ‡∏≠‡∏á 210",
      treatmentPlan:
        "‡πÉ‡∏´‡πâ‡∏¢‡∏≤‡∏õ‡∏è‡∏¥‡∏ä‡∏µ‡∏ß‡∏ô‡∏∞‡∏ó‡∏≤‡∏á‡∏´‡∏•‡∏≠‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏î, ‡∏≠‡∏≠‡∏Å‡∏ã‡∏¥‡πÄ‡∏à‡∏ô 2L/min, ‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏ó‡∏∏‡∏Å 4 ‡∏ä‡∏°.",
      vitals: { temp: 38.2, bp: "135/85", hr: 95, oxygen: 94 },
      i: i6,
    },
    {
      id: 5,
      name: "Anan Pholchai",
      hn: "HN003",
      age: 60,
      gender: "‡∏ä‡∏≤‡∏¢",
      contact: "065-xxx-9012",
      diagnosis: "Pneumonia (‡∏õ‡∏≠‡∏î‡∏≠‡∏±‡∏Å‡πÄ‡∏™‡∏ö)",
      doctorDecision: "Admit",
      status: "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏£‡∏±‡∏Å‡∏©‡∏≤‡πÉ‡∏ô‡∏´‡∏≠‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢",
      room: "Ward C - ‡∏´‡πâ‡∏≠‡∏á 210",
      treatmentPlan:
        "‡πÉ‡∏´‡πâ‡∏¢‡∏≤‡∏õ‡∏è‡∏¥‡∏ä‡∏µ‡∏ß‡∏ô‡∏∞‡∏ó‡∏≤‡∏á‡∏´‡∏•‡∏≠‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏î, ‡∏≠‡∏≠‡∏Å‡∏ã‡∏¥‡πÄ‡∏à‡∏ô 2L/min, ‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏ó‡∏∏‡∏Å 4 ‡∏ä‡∏°.",
      vitals: { temp: 38.2, bp: "135/85", hr: 95, oxygen: 94 },
      i: i7,
    },
  ];

  const [patients, setPatients] = useState(initialPatients);
  const [selectedPatient, setSelectedPatient] = useState(null); // ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢
  const updatePatientStatus = (id, newStatus) => {
    setPatients((prevPatients) =>
      prevPatients.map((p) => (p.id === id ? { ...p, status: newStatus } : p))
    );
    // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô Detailed View ‡∏î‡πâ‡∏ß‡∏¢ ‡∏´‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢‡∏Ñ‡∏ô‡πÄ‡∏î‡∏¥‡∏°
    if (selectedPatient && selectedPatient.id === id) {
      setSelectedPatient((prev) => ({ ...prev, status: newStatus }));
    }
  };

  // ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢
  const statusOptions = [
    "‡∏£‡∏≠ Admit",
    "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏£‡∏±‡∏Å‡∏©‡∏≤‡πÉ‡∏ô‡∏´‡∏≠‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢",
    "‡∏£‡∏≠‡∏û‡∏ö‡πÅ‡∏û‡∏ó‡∏¢‡πå",
    "‡∏£‡∏≠‡∏ú‡∏•‡πÅ‡∏•‡πá‡∏ö",
    "‡∏£‡∏±‡∏ö‡∏¢‡∏≤‡∏Å‡∏•‡∏±‡∏ö‡∏ö‡πâ‡∏≤‡∏ô",
    "‡∏à‡∏≥‡∏´‡∏ô‡πà‡∏≤‡∏¢‡πÅ‡∏•‡πâ‡∏ß",
  ];

  return (
    <div className="p-4 sm:p-6 lg:p-8 bg-gray-50 min-h-screen">
      <h2 className="text-3xl font-extrabold text-teal-700 mb-6 border-b pb-3">
        üìã Nurse Dashboard & Patient Tracking
      </h2>

      <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
        {/* --- COLUMN 1: Patient List (Primary View) --- */}
        <div className="lg:col-span-2 space-y-4">
          <h3 className="text-xl font-semibold text-gray-800">
            ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ({patients.length} ‡∏£‡∏≤‡∏¢)
          </h3>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
            {patients.map((patient) => (
              <PatientCard
                key={patient.id}
                patient={patient}
                onSelect={() => setSelectedPatient(patient)}
                onUpdateStatus={updatePatientStatus}
                statusOptions={statusOptions}
              />
            ))}
          </div>
        </div>

        {/* --- COLUMN 2: Patient Detailed View (Side Panel) --- */}
        <div className="lg:col-span-1">
          <DetailedPatientView
            patient={selectedPatient}
            onClose={() => setSelectedPatient(null)}
            onUpdateStatus={updatePatientStatus}
            statusOptions={statusOptions}
          />
        </div>
      </div>
    </div>
  );
}

// --- Reusable Component: Patient Card (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏ô List) ---
const PatientCard = ({ patient, onSelect, onUpdateStatus, statusOptions }) => {
  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏™‡∏µ‡∏ï‡∏≤‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
  const getStatusClass = (status) => {
    if (status.includes("‡∏£‡∏≠")) return "bg-yellow-500";
    if (status.includes("‡∏Å‡∏≥‡∏•‡∏±‡∏á")) return "bg-blue-500";
    if (status.includes("‡∏à‡∏≥‡∏´‡∏ô‡πà‡∏≤‡∏¢")) return "bg-gray-500";
    if (status.includes("‡∏Å‡∏•‡∏±‡∏ö‡∏ö‡πâ‡∏≤‡∏ô")) return "bg-green-600";
    return "bg-indigo-500";
  };

  return (
    <div className="border rounded-xl shadow-lg p-5 bg-white hover:shadow-xl transition flex flex-col">
      {/* Header: Name, Age, HN */}
      <div className="flex items-center space-x-4 border-b pb-3 mb-3">
        <img
          src={patient.i}
          alt=""
          className="w-14 h-14 rounded-full object-cover"
        />
        <div>
          <h3 className="text-lg font-bold text-teal-700">{patient.name}</h3>
          <p className="text-sm text-gray-500">
            HN: {patient.hn} ({patient.age} ‡∏õ‡∏µ)
          </p>
        </div>
      </div>

      {/* Body: Diagnosis, Room, Status */}
      <div className="space-y-2 text-sm flex-grow">
        <p>
          <span className="font-medium text-gray-600">‡∏ß‡∏¥‡∏ô‡∏¥‡∏à‡∏â‡∏±‡∏¢:</span>{" "}
          {patient.diagnosis}
        </p>
        <p>
          <span className="font-medium text-gray-600">‡∏´‡πâ‡∏≠‡∏á‡∏û‡∏±‡∏Å:</span>{" "}
          <span className="font-semibold text-purple-700">{patient.room}</span>
        </p>
        <p className="flex items-center">
          <span className="font-medium text-gray-600 mr-2">‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞:</span>
          <span
            className={`px-2 py-1 text-xs font-semibold rounded-full text-white ${getStatusClass(
              patient.status
            )}`}
          >
            {patient.status}
          </span>
        </p>
      </div>

      {/* Actions */}
      <div className="mt-4 flex space-x-2">
        <button
          className="flex-1 bg-blue-600 text-white py-2 rounded-lg text-sm hover:bg-blue-700 transition"
          onClick={onSelect}
        >
          üëÄ ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î & ‡πÅ‡∏ú‡∏ô‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏Å‡∏©‡∏≤
        </button>

        <select
          className="w-1/3 bg-gray-200 text-gray-800 py-2 px-1 rounded-lg text-sm border border-gray-300 cursor-pointer"
          value={patient.status}
          onChange={(e) => onUpdateStatus(patient.id, e.target.value)}
        >
          {statusOptions.map((status) => (
            <option key={status} value={status}>
              ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô: {status}
            </option>
          ))}
        </select>
      </div>
    </div>
  );
};

// --- Reusable Component: Detailed Patient View (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Side Panel) ---
const DetailedPatientView = ({
  patient,
  onClose,
  onUpdateStatus,
  statusOptions,
}) => {
  if (!patient) {
    return (
      <div className="bg-white p-6 rounded-xl shadow-lg sticky top-4 border-l-4 border-teal-500">
        <h3 className="text-xl font-semibold text-gray-700 mb-2">
          ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
        </h3>
        <p className="text-gray-500">
          ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢‡∏à‡∏≤‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏î‡πâ‡∏≤‡∏ô‡∏ã‡πâ‡∏≤‡∏¢‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
        </p>
      </div>
    );
  }

  const {
    id,
    name,
    hn,
    age,
    gender,
    contact,
    diagnosis,
    status,
    treatmentPlan,
    vitals,
    doctorDecision,
  } = patient;

  return (
    <div className="bg-white p-6 rounded-xl shadow-2xl sticky top-4 border-l-4 border-teal-700">
      <div className="flex justify-between items-start">
        <h3 className="text-2xl font-bold text-teal-700">{name}</h3>
        <button
          onClick={onClose}
          className="text-gray-500 hover:text-gray-800 text-xl font-bold transition"
        >
          &times;
        </button>
      </div>
      <p className="text-sm text-gray-500 mb-4">
        HN: {hn} | ID: {id}
      </p>

      <hr className="mb-4" />

      {/* BIO Information */}
      <h4 className="text-lg font-semibold text-gray-800 mb-2">
        üìã ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß (Bio)
      </h4>
      <div className="text-sm space-y-1 mb-4 bg-gray-50 p-3 rounded">
        <p>
          <strong>‡∏≠‡∏≤‡∏¢‡∏∏:</strong> {age} ‡∏õ‡∏µ ({gender})
        </p>
        <p>
          <strong>‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£:</strong> {contact}
        </p>
        <p>
          <strong>‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÅ‡∏û‡∏ó‡∏¢‡πå:</strong>{" "}
          <span className="font-bold text-red-600">
            {doctorDecision === "Admit" ? "‡∏ô‡∏≠‡∏ô‡πÇ‡∏£‡∏á‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•" : "‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢‡∏ô‡∏≠‡∏Å (OPD)"}
          </span>
        </p>
      </div>

      {/* Treatment and Status */}
      <h4 className="text-lg font-semibold text-gray-800 mb-2">
        üè• ‡πÅ‡∏ú‡∏ô‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏Å‡∏©‡∏≤‡πÅ‡∏•‡∏∞‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
      </h4>
      <div className="text-sm space-y-3">
        <p>
          <strong>‡∏ß‡∏¥‡∏ô‡∏¥‡∏à‡∏â‡∏±‡∏¢:</strong> {diagnosis}
        </p>
        <p>
          <strong>‡πÅ‡∏ú‡∏ô‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô:</strong>{" "}
          <span className="text-green-700 italic">{treatmentPlan}</span>
        </p>

        <div className="flex items-center gap-2">
          <span className="font-bold text-gray-700">‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞:</span>
          <select
            className="flex-1 bg-teal-100 text-teal-800 py-1 px-2 rounded-lg text-sm border border-teal-300 cursor-pointer"
            value={status}
            onChange={(e) => onUpdateStatus(id, e.target.value)}
          >
            {statusOptions.map((s) => (
              <option key={s} value={s}>
                {s}
              </option>
            ))}
          </select>
        </div>
      </div>

      <hr className="my-4" />

      {/* Vitals */}
      <h4 className="text-lg font-semibold text-gray-800 mb-2">
        üìä ‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì‡∏ä‡∏µ‡∏û‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
      </h4>
      <div className="grid grid-cols-2 gap-2 text-sm">
        <div className="bg-red-50 p-2 rounded">
          <strong>‡∏≠‡∏∏‡∏ì‡∏´‡∏†‡∏π‡∏°‡∏¥:</strong> {vitals.temp}¬∞C
        </div>
        <div className="bg-blue-50 p-2 rounded">
          <strong>‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô:</strong> {vitals.bp} mmHg
        </div>
        <div className="bg-yellow-50 p-2 rounded">
          <strong>‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡πâ‡∏ô‡∏´‡∏±‡∏ß‡πÉ‡∏à:</strong> {vitals.hr} bpm
        </div>
        <div className="bg-green-50 p-2 rounded">
          <strong>‡∏≠‡∏≠‡∏Å‡∏ã‡∏¥‡πÄ‡∏à‡∏ô:</strong> {vitals.oxygen}%
        </div>
      </div>
    </div>
  );
};
